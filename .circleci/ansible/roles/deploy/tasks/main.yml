---
- name: create backend directory on EC2
  become: yes
  file:
    path: /home/ubuntu/backend
    state: directory

- name: copy files to backend
  become: yes
  copy: 
    src: /root/project/artifact.tar.gz
    dest: /home/ubuntu/backend/artifact.tar.gz
    

- name: unzip backend directory
  become: yes
  shell: |
    cd /home/ubuntu/backend
    tar -vxf artifact.tar.gz
    rm -f artifact.tar.gz

- name: "upgrade packages."
  become: true
  apt:
    upgrade: "yes"

- name: install curl
  apt: 
    name: 
      - curl
    update_cache: yes
    cache_valid_time: 3600
  become: true

- name: get url
  shell: |
      curl -sL https://deb.nodesource.com/setup_13.8.0 | sudo -E bash -
  become: true 

- name: install node
  apt: 
    name: 
      - nodejs
    update_cache: yes
    cache_valid_time: 3600
  become: true

- name: "install pm2"
  become: true
  npm:
    name: pm2
    global: yes
    production: yes
    state: present

- name: Start the app
  shell: |
      cd /home/ubuntu/backend
      npm install
      npm audit fix 
      pm2 list && ps aux|grep node
      pm2 stop default
      pm2 start npm -- run start
  become: true 


#########################the begining code####################
# - name: create backend directory on EC2
#   become: yes
#   file:
#     path: /home/ubuntu/backend
#     state: directory
#     # set file mode to 0755 -> https://chmodcommand.com/chmod-0755/ 
#     mode: 0755

# - name: copy files to backend
#   become: yes
#   copy: 
#     src: /home/ubuntu/backend/artifact.tar.gz
#     dest: /home/ubuntu/backend/artifact.tar.gz
#     ignore_errors: "{{ ansible_check_mode }}"

# - name: unzip backend directory
#   become: yes
#   shell: |
#     cd /home/ubuntu/backend
#     tar -vxf artifact.tar.gz
#     rm -f artifact.tar.gz
# - name: start application
#   become: yes
#   shell: |
#     cd /home/ubuntu/backend
#     npm install
#     pm2 stop default
#     pm2 start npm -- start
#     cd dist
#     pm2 start main.js --update-env
#   environment:
#     ENVIRONMENT: production
#     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#     TYPEORM_MIGRATIONS_DIR: "./migrations"
#     TYPEORM_MIGRATIONS: "./migrations/*.js"
#     TYPEORM_ENTITIES: "./modules/domain/*/entities/*.entity.js"
#     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

# - name: print environment variables
#   become: yes
#   shell: |
#     printenv
#   register: printenv_out

# - debug: var=printenv_out.stdout_lines
##############
# - name: "Move backend files to server."
#   copy:
#     src: /root/project/backend_artifact.tar.gz
#     dest: ~/home/ubuntu
    
# - name: "Install package dependencies"
#   shell: |
#     cd ~/home/ubuntu
#     tar -xzvf backend_artifact.tar.gz -C backend
#     rm backend_artifact.tar.gz
#     cd backend/
#     npm run build
#     cd dist
#     pm2 start npm --name backend -- start
# ########################my code starts####################
# - name: create backend directory on EC2
#   become: yes
#   file:
#     path:  /home/ubuntu/backend
#     state: directory


#   #  - name: Creates directory
#   # file:
#   #   path: ~/web
#   #   state: directory
# - name: copy files to backend
#   become: yes
#   copy: 
#     src: ~/project/backend_artifact.tar.gz
#     dest: ~/home/ubuntu/backend
#     ignore_errors: "{{ ansible_check_mode }}"

# - name: Copy index test page
#   template:
#     src: "files/index.js"
#     dest: "~/web/index.js"

# - name: "Install package dependencies"
#   shell: |
#     cd ~/home/ubuntu
#     tar -xzvf backend_artifact.tar.gz -C backend
#     rm backend_artifact.tar.gz
#     cd backend/
#     npm install
#     npm run build
#     cd dist
#     pm2 stop default
#     pm2 start npm --~/home/ubuntu/backend -- start -f
#############mycode ends##############
##########################newcode########################
# - name: Creates backend directory
#   file:
#     path: /home/ubuntu/backend
#     state: directory

# - name: copy artifact.tar.gz
#   unarchive:
#     src: /home/circleci/project/artifact.tar.gz
#     dest: /home/ubuntu/backend
# - name: "upgrade packages."
#   become: true
#   apt:
#     upgrade: "yes"
# - name: install curl
#   apt: 
#     name: 
#       - curl
#     update_cache: yes
#     cache_valid_time: 3600
#   become: True

# - name: get url
#   shell: |
#       curl -sL https://deb.nodesource.com/setup_13.8.0 | sudo -E bash -
#   become: True 

# - name: install node
#   apt: 
#     name: 
#       - nodejs
#     update_cache: yes
#     cache_valid_time: 3600
#   become: True

# - name: "install pm2"
#   become: true
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present

# - name: Start the app
#   shell: |
#       cd /home/ubuntu/backend
#       npm install
#       npm audit fix 
#       pm2 list && ps aux|grep node
#       pm2 stop default
#       pm2 start npm -- run start
#   become: True 
#####
#- name: unzip artifact.tar.gz
 # unarchive:
 #   src: /home/ubuntu/backend/artifact.tar.gz
  #  dest: /home/ubuntu/backend
 # ignore_errors: "{{ ansible_check_mode }}"
