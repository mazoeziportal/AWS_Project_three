---
# - name: create backend directory on EC2
#   become: yes
#   file:
#     path: /home/ubuntu/backend
#     state: directory
#     # set file mode to 0755 -> https://chmodcommand.com/chmod-0755/ 
#     mode: 0755

# - name: copy files to backend
#   become: yes
#   copy: 
#     src: /home/ubuntu/backend/artifact.tar.gz
#     dest: /home/ubuntu/backend/artifact.tar.gz
#     ignore_errors: "{{ ansible_check_mode }}"

# - name: unzip backend directory
#   become: yes
#   shell: |
#     cd /home/ubuntu/backend
#     tar -vxf artifact.tar.gz
#     rm -f artifact.tar.gz
# - name: start application
#   become: yes
#   shell: |
#     cd /home/ubuntu/backend
#     npm install
#     pm2 stop default
#     pm2 start npm -- start
#     cd dist
#     pm2 start main.js --update-env
#   environment:
#     ENVIRONMENT: production
#     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
#     TYPEORM_MIGRATIONS_DIR: "./migrations"
#     TYPEORM_MIGRATIONS: "./migrations/*.js"
#     TYPEORM_ENTITIES: "./modules/domain/*/entities/*.entity.js"
#     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
#     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
#     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
#     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
#     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

# - name: print environment variables
#   become: yes
#   shell: |
#     printenv
#   register: printenv_out

# - debug: var=printenv_out.stdout_lines
- name: "Move backend files to server."
  copy:
    src: /root/project/backend_artifact.tar.gz
    dest: ~/home/ubuntu
    
- name: "Install package dependencies"
  shell: |
    cd ~/home/ubuntu
    tar -xzvf backend_artifact.tar.gz -C backend
    rm backend_artifact.tar.gz
    cd backend/
    npm run build
    cd dist
    pm2 start npm --name backend -- start